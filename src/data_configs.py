SYNTHETIC_NTR = 10000
SYNTHETIC_NTST = 1000
SYNTHETIC_D = 10

DATA_DIR = "./data/"
DATA_CONFIGS = {
    "a9a": {
        "tr": "a9a",
        "tst": "a9a.t",
        "loading": "libsvm_multiple",
        "task": "classification",
    },
    "acsincome": {
        "tr": "acsincome_data.pkl",
        "tgt": "acsincome_target.pkl",
        "loading": "pkl",
        "split": 0.8,
        "task": "regression",
    },
    "airlines": {
        "tr": "airlines_data.pkl",
        "tgt": "airlines_target.pkl",
        "loading": "pkl",
        "split": 0.8,
        "task": "regression",
    },
    "aspirin": {
        "tr": "md17_aspirin.npz",
        "loading": "npz",
        "split": 0.8,
        "task": "regression",
    },
    "benzene": {
        "tr": "md17_benzene2017.npz",
        "loading": "npz",
        "split": 0.8,
        "task": "regression",
    },
    "cadata": {"tr": "cadata", "loading": "libsvm", "split": 0.8, "task": "regression"},
    "cifar10": {
        "tr": "cifar10_data.pkl",
        "tgt": "cifar10_target.pkl",
        "loading": "pkl",
        "split": 50000,
        "shuffle": False,
        "label_map": {i: 1 if i != 0 else -1 for i in range(10)},
        "task": "classification",
    },
    "click_prediction": {
        "tr": "click_prediction_data.pkl",
        "tgt": "click_prediction_target.pkl",
        "loading": "pkl",
        "split": 0.8,
        "label_map": {"0": -1, "1": 1},
        "task": "classification",
    },
    "cod_rna": {
        "tr": "cod-rna",
        "tst": "cod-rna.t",
        "loading": "libsvm_multiple",
        "task": "classification",
    },
    "comet_mc": {
        "tr": "comet_mc_data.pkl",
        "tgt": "comet_mc_target.pkl",
        "loading": "pkl",
        "split": 0.8,
        "label_map": {0: -1, 1: 1},
        "task": "classification",
    },
    "connect_4": {
        "tr": "connect-4",
        "loading": "libsvm",
        "split": 0.8,
        "label_map": {-1: -1, 0: 1, 1: 1},
        "task": "classification",
    },
    "covtype_binary": {
        "tr": "covtype.libsvm.binary.scale",
        "loading": "libsvm",
        "split": 0.8,
        "label_map": {1: -1, 2: 1},
        "task": "classification",
    },
    "creditcard": {
        "tr": "creditcard_data.pkl",
        "tgt": "creditcard_target.pkl",
        "loading": "pkl",
        "split": 0.8,
        "label_map": {"0": -1, "1": 1},
        "task": "classification",
    },
    "diamonds": {
        "tr": "diamonds_data.pkl",
        "tgt": "diamonds_target.pkl",
        "loading": "pkl",
        "split": 0.8,
        "one_hot_features": ["cut", "color", "clarity"],
        "task": "regression",
    },
    "ethanol": {
        "tr": "md17_ethanol.npz",
        "loading": "npz",
        "split": 0.8,
        "task": "regression",
    },
    "fashion_mnist": {
        "tr": "fashionmnist_data.pkl",
        "tgt": "fashionmnist_target.pkl",
        "loading": "pkl",
        "split": 60000,
        "shuffle": False,
        "label_map": {i: 1 if i != 0 else -1 for i in range(10)},
        "task": "classification",
    },
    "higgs": {
        "tr": "HIGGS",
        "loading": "libsvm",
        "split": 10500000,
        "shuffle": False,
        "label_map": {0: -1, 1: 1},
        "task": "classification",
    },
    "hls4ml": {
        "tr": "hls4ml_data.pkl",
        "tgt": "hls4ml_target.pkl",
        "loading": "pkl",
        "split": 0.8,
        "label_map": {"g": -1, "w": 1, "t": 1, "z": 1, "q": 1},
        "task": "classification",
    },
    "ijcnn1": {
        "tr": "ijcnn1.tr",
        "tst": "ijcnn1.t",
        "loading": "libsvm_multiple",
        "task": "classification",
    },
    "jannis": {
        "tr": "jannis_data.pkl",
        "tgt": "jannis_target.pkl",
        "loading": "pkl",
        "split": 0.8,
        "label_map": {"0": -1, "1": 1},
        "task": "classification",
    },
    "malonaldehyde": {
        "tr": "md17_malonaldehyde.npz",
        "loading": "npz",
        "split": 0.8,
        "task": "regression",
    },
    "medical": {
        "tr": "medical_data.pkl",
        "tgt": "medical_target.pkl",
        "loading": "pkl",
        "split": 0.8,
        "label_map": {0.0: -1, 1.0: 1},
        "task": "classification",
    },
    "miniboone": {
        "tr": "miniboone_data.pkl",
        "tgt": "miniboone_target.pkl",
        "loading": "pkl",
        "split": 0.8,
        "label_map": {"False": -1, "True": 1},
        "task": "classification",
    },
    "mnist": {
        "tr": "mnist_data.pkl",
        "tgt": "mnist_target.pkl",
        "loading": "pkl",
        "split": 60000,
        "shuffle": False,
        "label_map": {i: 1 if i != 0 else -1 for i in range(10)},
        "task": "classification",
    },
    "naphthalene": {
        "tr": "md17_naphthalene.npz",
        "loading": "npz",
        "split": 0.8,
        "task": "regression",
    },
    "phishing": {
        "tr": "phishing",
        "loading": "libsvm",
        "split": 0.8,
        "label_map": {0: -1, 1: 1},
        "task": "classification",
    },
    "qm9": {
        "tr": "qm9.mat",
        "loading": "mat",
        "split": 100000,
        "shuffle": True,
        "task": "regression",
    },
    "salicylic": {
        "tr": "md17_salicylic.npz",
        "loading": "npz",
        "split": 0.8,
        "task": "regression",
    },
    "santander": {
        "tr": "santander_data.pkl",
        "tgt": "santander_target.pkl",
        "loading": "pkl",
        "split": 0.8,
        "label_map": {"False": -1, "True": 1},
        "task": "classification",
    },
    "sensit_vehicle": {
        "tr": "combined_scale",
        "tst": "combined_scale.t",
        "loading": "libsvm_multiple",
        "label_map": {1: -1, 2: 1, 3: 1},
        "task": "classification",
    },
    "sensorless": {
        "tr": "Sensorless.scale.tr",
        "tst": "Sensorless.scale.val",
        "loading": "libsvm_multiple",
        "label_map": {i: 1 if i != 1 else -1 for i in range(1, 12)},
        "task": "classification",
    },
    "skin_nonskin": {
        "tr": "skin_nonskin",
        "loading": "libsvm",
        "split": 0.8,
        "label_map": {1: -1, 2: 1},
        "task": "classification",
    },
    "susy": {
        "tr": "SUSY",
        "loading": "libsvm",
        "split": 4500000,
        "shuffle": False,
        "label_map": {0: -1, 1: 1},
        "task": "classification",
    },
    "svhn": {
        "tr": "svhn_data.pkl",
        "tgt": "svhn_target.pkl",
        "loading": "pkl",
        "split": 73257,
        "shuffle": False,
        "label_map": {i: 1 if i != 0 else -1 for i in range(10)},
        "task": "classification",
    },
    "synthetic": {
        "split": SYNTHETIC_NTR,
        "shuffle": False,
        "task": "regression",
    },
    "taxi": {
        "tr": "taxi-data/subsampled_data.h5py",
        "loading": "h5py",
        "split": 100000000,
        "shuffle": True,
        "task": "regression",
    },
    "toluene": {
        "tr": "md17_toluene.npz",
        "loading": "npz",
        "split": 0.8,
        "task": "regression",
    },
    "uracil": {
        "tr": "md17_uracil.npz",
        "loading": "npz",
        "split": 0.8,
        "task": "regression",
    },
    "volkert": {
        "tr": "volkert_data.pkl",
        "tgt": "volkert_target.pkl",
        "loading": "pkl",
        "split": 0.8,
        "label_map": {f"{i}": 1 if i != 0 else -1 for i in range(10)},
        "task": "classification",
    },
    "w8a": {
        "tr": "w8a",
        "tst": "w8a.t",
        "loading": "libsvm_multiple",
        "task": "classification",
    },
    "yearpredictionmsd": {
        "tr": "YearPredictionMSD",
        "tst": "YearPredictionMSD.t",
        "loading": "libsvm_multiple",
        "task": "regression",
    },
    "yolanda": {
        "tr": "yolanda_data.pkl",
        "tgt": "yolanda_target.pkl",
        "loading": "pkl",
        "split": 0.8,
        "task": "regression",
    },
}
MOLECULES = [
    "aspirin",
    "benzene",
    "ethanol",
    "malonaldehyde",
    "naphthalene",
    "salicylic",
    "toluene",
    "uracil",
]
FALKON_DATASETS = [
    "acsincome",
    "airlines",
    "benzene",
    "click_prediction",
    "comet_mc",
    "higgs",
    "hls4ml",
    "malonaldehyde",
    "susy",
    "mnist",
    "cifar10",
    "fashion_mnist",
    "svhn",
    "miniboone",
    "qm9",
    "uracil",
    "aspirin",
    "salicylic",
    "naphthalene",
    "toluene",
    "ethanol",
    "yearpredictionmsd",
    "covtype_binary",
    "yolanda",
]
REMOVE_LABEL_MEANS = [
    "aspirin",
    "benzene",
    "ethanol",
    "malonaldehyde",
    "naphthalene",
    "salicylic",
    "toluene",
    "uracil",
    "yolanda",
    "yearpredictionmsd",
    "acsincome",
]
